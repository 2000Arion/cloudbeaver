enum AuthCredentialEncryption {
    none,
    plain,
    hash
}

type AuthCredentialInfo {
    id: ID!
    label: String!
    description: String

    editable: Boolean
    possibleValues: [String]!
    encryption: AuthCredentialEncryption
}

type AuthProviderInfo {
    id: ID!
    label: String!
    icon: ID
    description: String

    isDefault: Boolean

    crdentialsInfo: [AuthCredentialInfo]!
}

type UserAuthInfo {
    userId: String!
    authProvider: String!
    loginTime: DateTime!

    # Optional login message
    message: String
}

extend type Query {

    authLogin(provider: ID!, credentials: Object!): UserAuthInfo

    authLogout: Boolean

    sessionUser: UserAuthInfo

    authProviders: [AuthProviderInfo]!

}
